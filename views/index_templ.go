// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "mindpalace/usecase/orchestrate"

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>MindPalace</title><script src=\"https://unpkg.com/htmx.org@2.0.0\"></script><script>htmx.logAll();</script><style>\n                :root {\n                    --primary-color: #3498db;\n                    --background-color: #f5f8fa;\n                    --text-color: #333;\n                    --border-color: #e1e8ed;\n                }\n                body {\n                    font-family: 'Arial', sans-serif;\n                    line-height: 1.6;\n                    color: var(--text-color);\n                    background-color: var(--background-color);\n                    margin: 0;\n                    padding: 20px;\n                }\n                .container {\n                    max-width: 800px;\n                    margin: 0 auto;\n                    background-color: white;\n                    border-radius: 8px;\n                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                    overflow: hidden;\n                }\n                h1 {\n                    text-align: center;\n                    color: var(--primary-color);\n                    padding: 20px 0;\n                    margin: 0;\n                    background-color: white;\n                    border-bottom: 1px solid var(--border-color);\n                }\n                #chatbox {\n                    height: 60vh;\n                    overflow-y: auto;\n                    padding: 20px;\n                    background-color: white;\n                }\n                .message {\n                    margin-bottom: 15px;\n                    padding: 10px;\n                    border-radius: 8px;\n                }\n                .request {\n                    background-color: #e8f5fe;\n                    border-left: 4px solid var(--primary-color);\n                }\n                .response {\n                    background-color: #f0f0f0;\n                    border-left: 4px solid #2ecc71;\n                }\n                .message-header {\n                    font-weight: bold;\n                    margin-bottom: 5px;\n                    color: var(--primary-color);\n                }\n                .message-content {\n                    color: var(--text-color);\n                }\n                form {\n                    display: flex;\n                    padding: 20px;\n                    background-color: white;\n                    border-top: 1px solid var(--border-color);\n                }\n                input[type=\"text\"] {\n                    flex-grow: 1;\n                    padding: 10px;\n                    border: 1px solid var(--border-color);\n                    border-radius: 4px;\n                    font-size: 16px;\n                }\n                input[type=\"text\"]:focus {\n                    outline: none;\n                    border-color: var(--primary-color);\n                }\n                .loader {\n                    display: none;\n                    position: fixed;\n                    left: 50%;\n                    top: 50%;\n                    transform: translate(-50%, -50%);\n                    border: 4px solid #f3f3f3;\n                    border-top: 4px solid var(--primary-color);\n                    border-radius: 50%;\n                    width: 40px;\n                    height: 40px;\n                    animation: spin 1s linear infinite;\n                }\n                @keyframes spin {\n                    0% { transform: translate(-50%, -50%) rotate(0deg); }\n                    100% { transform: translate(-50%, -50%) rotate(360deg); }\n                }\n            </style></head><body><div class=\"container\"><h1>MindPalace Chat</h1><div id=\"chat\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = ChatContent(orchestrate.LLMResponse{}).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

func ChatContent(response orchestrate.LLMResponse) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div id=\"chatbox\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if response.Request != "" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"message request\"><div class=\"message-header\">Request:</div><div class=\"message-content\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(response.Request)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `views/index.templ`, Line: 124, Col: 63}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		if response.Response != "" {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"message response\"><div class=\"message-header\">Response:</div><div class=\"message-content\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templ.Raw(response.Response).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div><form hx-post=\"/send\" hx-target=\"#chat\" hx-swap=\"innerHTML\" hx-indicator=\"#spinner\"><input type=\"text\" name=\"chatinput\" placeholder=\"Type your message here...\" autocomplete=\"off\"></form><div id=\"spinner\" class=\"loader\"></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
